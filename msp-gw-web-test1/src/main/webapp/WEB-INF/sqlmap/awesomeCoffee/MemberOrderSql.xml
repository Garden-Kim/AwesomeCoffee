<?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE mapper
                PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
                "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Order">

	<select id="directOrder" resultType="awesomeCoffee.dto.MenuDTO">
		select *
		from goods
		where goods_num = #{goodsNum}
	</select>
	
	<select id="createOrderNum" resultType="String">
		select order_seq.nextval from dual
	</select>
	
	<select id="memberCartList" resultType="awesomeCoffee.dto.MemberOrderDTO" parameterType="map">
		select g.goods_num, c.qty, c.qty * g.goods_price as price_sum,
				g.goods_image, g.goods_name
		from cart c, goods g, member m
		where m.member_num = c.member_num and c.goods_num = g.goods_num
		and m.member_num = #{memberNum}
	</select>
	
	<insert id="insertDirectOrder">
		INSERT INTO MEMBER_ORDER (order_num, order_price,
		order_time, takeout, member_num, cook_state)
		VALUES
		(#{orderNum}, #{orderPrice}, TO_CHAR(SYSDATE, 'RRRR-MM-DD HH24:MI:SS'),
		'N', #{memberNum}, 'N')
	</insert>
	
	<insert id="insertOrder">
		INSERT INTO MEMBER_ORDER (order_num, order_price,
		order_time, takeout, member_num, cook_state)
		VALUES
		(#{orderNum},
		(select sum(price_sum)
		from
		(
		select c.qty * g.goods_price as price_sum
		from cart c, goods g, member m
		where m.member_num = c.member_num and c.goods_num = g.goods_num
		and m.member_num = #{memberNum}
		)
		),
		TO_CHAR(SYSDATE, 'RRRR-MM-DD HH24:MI:SS'),
		'N', #{memberNum}, 'N')
	</insert>

	<delete id="deleteOrder">
		delete
		from member_order
		where order_num = #{orderNum}
	</delete>

	<!-- 회원 주문 전체 리스트 -->
	<select id="selectAllMemOrder"
		resultType="awesomeCoffee.dto.MemberOrderDTO">
		select ORDER_NUM, ORDER_PRICE, ORDER_TIME, TAKEOUT, MEMBER_NUM, COOK_STATE, to_number(ORDER_NUM) onum
		from member_order
		where member_num = #{memberNum}
		order by onum desc
	</select>
	<!-- 회원 주문 조리  수령 N  -->
	<select id="selectMemOrderNNYN"
		resultType="awesomeCoffee.dto.MemberOrderDTO">
		select ORDER_NUM, ORDER_PRICE, ORDER_TIME, TAKEOUT, MEMBER_NUM, COOK_STATE, to_number(ORDER_NUM) onum
		from member_order
		where member_num = #{memberNum} and takeout = 'N'
		order by onum desc
	</select>
	<!-- 회원 주문 조리 Y 수령 N -->
	<select id="selectMemOrderYN"
		resultType="awesomeCoffee.dto.MemberOrderDTO">
		select ORDER_NUM, ORDER_PRICE, ORDER_TIME, TAKEOUT, MEMBER_NUM, COOK_STATE, to_number(ORDER_NUM) onum
		from member_order
		where member_num = #{memberNum} and cook_state = 'Y' and takeout = 'N'
		order by onum desc
	</select>
	<!-- 회원 주문 조리 Y 수령 Y  -->
	<select id="selectMemOrderYY"
		resultType="awesomeCoffee.dto.MemberOrderDTO">
		select ORDER_NUM, ORDER_PRICE, ORDER_TIME, TAKEOUT, MEMBER_NUM, COOK_STATE, to_number(ORDER_NUM) onum
		from member_order
		where member_num = #{memberNum} and cook_state = 'Y' and takeout = 'Y'
		order by onum desc
	</select>
	
	
	
	<!-- 조리상태 'N' 전부 출력 -->
	<select id="selectAllEmpOrderTake" resultType="awesomeCoffee.dto.MemberOrderDTO">
		SELECT ORDER_NUM, ORDER_PRICE, ORDER_TIME, TAKEOUT, MEMBER_NUM, COOK_STATE, to_number(ORDER_NUM) onum
		FROM member_order
		WHERE cook_state = 'Y'
		AND TAKEOUT = 'N'
		ORDER BY onum desc
	</select>
	<!-- 조리상태 'N' 전부 출력 -->
	<select id="selectAllEmpOrderN"
		resultType="awesomeCoffee.dto.MemberOrderDTO">
		select ORDER_NUM, ORDER_PRICE, ORDER_TIME, TAKEOUT, MEMBER_NUM, COOK_STATE, to_number(ORDER_NUM) onum
		from member_order
		where cook_state = 'N'
		order by onum desc
	</select>
	<!-- 조리상태 'Y' 전부 출력 -->
	<select id="selectAllEmpOrderY" resultType="awesomeCoffee.dto.MemberOrderDTO">
		select ORDER_NUM, ORDER_PRICE, ORDER_TIME, TAKEOUT, MEMBER_NUM, COOK_STATE, to_number(ORDER_NUM) onum
		from member_order
		where cook_state = 'Y'
		order by onum desc
	</select>
	<!-- 오늘의 주문 전부 출력 -->
	<select id="selectTodayOrder" resultType="awesomeCoffee.dto.MemberOrderDTO">
		select ORDER_NUM, ORDER_PRICE, ORDER_TIME, TAKEOUT, MEMBER_NUM, COOK_STATE, to_number(ORDER_NUM) onum
		from member_order
		where to_char(order_time,'yy/mm/dd') = to_char(sysdate)
		order by onum desc
		
	</select>
	
	<update id="updateOrderCookState">
		update member_order
		set cook_state = #{cookState}
		where order_num = #{orderNum}
		
	</update>
	
	
	<select id="selectOrderDetail" parameterType="map" resultType="awesomeCoffee.dto.MemberOrderDTO">
		select *
		from member_order
		where order_num = #{orderNum}
	</select>

	<update id="updateOrderTakeout">
		update member_order
		set takeout = #{takeout}
		where
		order_num = #{orderNum}
	</update>

	<update id="updateOrderPrice">
		update member_order
		set order_price = #{orderPrice}
		where order_num = #{orderNum}
	</update>














</mapper>